<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris Wahlfeldt</title>
    <description>This is my personal site and I use it to post my projects and write about things that include: stuff im working on, videogames, 3D stuff, the &#39;interweb&#39;, and how to make shit!</description>
    <link>//</link>
    <atom:link href="//feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Full Stack JS Guide</title>
        <description>&lt;script src=&quot;http://cwahlfeldt.github.io/garlic.min.js&quot;&gt;&lt;/script&gt;

&lt;!-- JS --&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    $(document).ready(function($) {
        $(&#39;#accordion&#39;).find(&#39;.accordion-toggle&#39;).click(function() {
            //Expand or collapse this panel
            $(this).next().slideToggle(&#39;fast&#39;);

            //$(this).css(&#39;color&#39;, &#39;#8098FD&#39;);

            //Hide the other panels
            $(&quot;.accordion-content&quot;).not($(this).next()).slideUp(
                &#39;fast&#39;);
        });
    });
&lt;/script&gt;

&lt;!-- CSS --&gt;
&lt;style&gt;
    form {
        
    }
    .accordion-toggle {
        cursor: pointer;
        color: #8098FD;
        margin-bottom: 15px;
        border: solid #8098FD 1px;
        border-radius: 8px;
        padding: 10px;
        text-align: center;
    }
    .accordion-content {
        margin-left: 10px;
        display: none;
        margin-bottom:30px;
    }
    .accordion-content.default,
    .accordion-content.default label {
        margin-left: 8px;
        display: block;
    }
    .accordion-content {
        margin-left: 8px;
    }
    .accordion-content label {
        display: block;
    }
    .accordion-content.default p {
      margin-left: 0px;
    }
    .accordion-label {
        font-size: 15px;
    }
    .accordion-label input {
        margin-right: 10px;
    }
    .accordion-toggle:hover{
        color: #80E1D2;
        border: solid #80E1D2 1px;
    }
    .accordion-content p {
        text-align: center;
        color: #80E1D2;
    }
&lt;/style&gt;

&lt;!-- HTML --&gt;
&lt;div id=&quot;accordion&quot;&gt;
&lt;form data-persist=&quot;garlic&quot;&gt;

&lt;h4 class=&quot;accordion-toggle&quot;&gt;Weeks 1 &amp; 2 &lt;!--&amp;#9660--&gt;&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Making a Website with HTML and CSS; Learn JavaScript Data Types, Functions,
        Control Flow, and Loops&lt;/p&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;1. If you do not already know HTML and CSS very well, complete the
            Web Fundamentals Track on Codecademy.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;2. Read the Preface and Chapters 1 and 2 of JavaScript: The Definitive
            Guide. Or Read the Introduction and Chapters 1 and 2 of Professional
            JavaScript for Web Developers.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;3. Work through the Introduction to JavaScript section of the JavaScript
            Track on Codecademy.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;4. Read chapters 3 and 4 of JavaScript: The Definitive Guide. Or Read
            the Preface and Chapters 3 and 4 of Professional JavaScript for Web
            Developers. You can skip the section on “Bitwise Operators”; it is
            hardly likely you will use those in your JavaScript career.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;5. Read chapter 5 of JavaScript: The Definitive Guide. No reading for
            Professional JavaScript for Web Developers, you have learned the material
            already in the last chapter.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;6. And work through sections 2 to 5 of the JavaScript Track on Codecademy.
        &lt;/label&gt;
&lt;/div&gt;

&lt;h4 class=&quot;accordion-toggle&quot;&gt;Weeks 3 &amp; 4 &lt;!--&amp;#9660--&gt;&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Objects, Arrays, Functions, DOM, jQuery&lt;/p&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;1. Read my post JavaScript Objects in Detail. Or read chapter 6 of JavaScript: The Definitive Guide.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;2. Read chapters 7 and 8 of JavaScript: The Definitive Guide. Or read chapters 5 and 7 of Professional JavaScript for Web Developers
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;3. At this juncture, you should be spending a lot of time writing code in your browser’s console and testing if-else statements, for loops, Arrays, Functions, Objects, and more. It is critically important that you know (and keep practicing) how to code independently (without help from Codecademy) in your browser.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;4. Return to Codecademy and complete the JavaScript track by working through sections 6, 7, and 8 (Data Structures to Object 2).
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;5. While you are on Codecademy, go ahead and build the 5 little Basic Projects on the Projects track. After this, you are done with Codecademy. And this is a good thing, because the more you work on your own, the faster you will learn and the better prepared you will be to start programming on your own.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;6. Read chapters 13, 15, 16, and 19 of JavaScript: The Definitive Guide. Or read chapters 8, 9, 10, 11, 13, and 14 of Professional JavaScript for Web Developers. This book does not cover jQuery, and the jQuery coverage on Codecademy is insufficient. Follow this jQuery course—it is free: http://try.jquery.com/
        &lt;/label&gt;
&lt;/div&gt;

&lt;h4 class=&quot;accordion-toggle&quot;&gt;Project&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Your First Project&lt;/p&gt;
    &lt;form data-persist=&quot;garlic&quot;&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;
            1. At this juncture, you have learned enough to build a solid web application that is manageable. Don’t proceed any further until you can successfully build this application I describe below. As I noted earlier, if you are stuck, ask questions on Stack Overflow and reread sections of the book to properly understand the concepts. &lt;br&gt;
            You are building a JavaScript quiz application (you will use HTML and CSS as well) that will function as follows:
            &lt;ul&gt;
                &lt;li&gt;It is a simple quiz that has radio button choices, and it will show the user her score upon completion.&lt;/li&gt;
                &lt;li&gt;The quiz can show any number of questions and any number of choices.&lt;/li&gt;
                &lt;li&gt;Tally the user’s score and display the final score on the last page. The last page will only show the score, so remove the last question.&lt;/li&gt;
                &lt;li&gt;Use an array to store all the questions. Each question, along with its choices and correct answer, should be stored in an object. The array of questions should look similar to this:&lt;/li&gt;
                &lt;pre&gt;// Only one question is in this array, but you will add all the questions.var allQuestions = [{question: &quot;Who is Prime Minister of the United Kingdom?&quot;, choices: [&quot;David Cameron&quot;, &quot;Gordon Brown&quot;, &quot;Winston Churchill&quot;, &quot;Tony Blair&quot;], correctAnswer:0}];&lt;/pre&gt;
                &lt;li&gt;Dynamically (with document.getElementById or jQuery) add the next question and remove the current question from the screen, when the user clicks the “Next” button. The Next button will be the only button to navigate this version of the quiz.&lt;/li&gt;
                &lt;li&gt;You can ask for help in the comments below or preferably on Stack Overflow. You are likely to get a prompt and accurate answer on Stack Overflow.&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/label&gt;
&lt;/div&gt;

&lt;h4 class=&quot;accordion-toggle&quot;&gt;Weeks 5 &amp; 6&lt;!--&amp;#9660--&gt;&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Regular Expressions, Window Object, Events, jQuery&lt;/p&gt;
    &lt;form data-persist=&quot;garlic&quot;&gt;
        
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;1. Read chapters 10, 14, 17, and 20 of JavaScript: The Definitive Guide. Or read chapters 20 and 23 of Professional JavaScript for Web Developers.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;2. Remember to keep typing out all the example codes in Firefox console and tweak each piece of code to experiment with it to really understand how it works and what it does.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;3. At this point, you should be very comfortable with JavaScript, probably feeling like a Jedi. You are not quite a Jedi yet, you must keep using your newly acquired knowledge and skills as often as possible to keep learning and improving.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;
            4. Improve Your Quiz Application From Earlier:
            &lt;ul&gt;
                &lt;li&gt;Add client-side data validation: make sure the user answers each question before proceeding to the next question.&lt;/li&gt;
                &lt;li&gt;Add a “Back” button to allow the user to go back and change her answer. The user can go back up to the first question. For the questions that the user has answered already, be sure to show the radio button selected, so that the user is not forced to answer the questions again, which she has completed.&lt;/li&gt;
                &lt;li&gt;Use jQuery to add animation (fade out the current question and fade in the next question).&lt;/li&gt;
                &lt;li&gt;Test the quiz on IE 8 and 9, and fix any bugs. This will give you a good workout.&lt;/li&gt; 😉
                &lt;li&gt;Store the quiz questions in an external JSON file.&lt;/li&gt;
                &lt;li&gt;Add user authentication: allow users log in, and save their login credentials to local storage (HTML5 browser storage).&lt;/li&gt;
                &lt;li&gt;Use cookies to remember the user, and show a “Welcome, First Name” message when the user returns to the quiz.&lt;/li&gt;
            &lt;/ul&gt;        
        &lt;/label&gt;
&lt;/div&gt;

&lt;h4 class=&quot;accordion-toggle&quot;&gt;Weeks 7 &amp; 8&lt;!--&amp;#9660--&gt;&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Classes, Inheritance, more HTML5&lt;/p&gt;
    &lt;form data-persist=&quot;garlic&quot;&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;1. Read chapters 9, 18, 21, and 22 of JavaScript the Definitive Guide. Or read my blog post, OOP In JavaScript: What You NEED to Know.
            &lt;br&gt;Or read chapters 6 (only the “Object Creation” and “Inheritance” sections this time) 16, 22, and 24 of Professional JavaScript for Web Developers. NOTE: The reading in this section of the book is the most technical reading you will encounter in this entire road map. It is up to you if you want to read all of it. You should at least learn the Prototype Pattern, Factory Pattern, and Prototypal Inheritance. You don’t have to know all the other patterns.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;
            2. Improve Your Quiz Application Even Further:
            &lt;ul&gt;
                &lt;li&gt;Use Twitter Bootstrap for the entire page layout, including the quiz elements to make it look more professional. As an added bonus, use the tabs user interface component from Twitter Bootstrap and show 4 different quizzes, one on each tab.&lt;/li&gt;
                &lt;li&gt;Learn Handlebars.js and add Handlebars.js templating to the quiz. You should no longer have any HTML in your JavaScript code. Your quiz is getting more advanced bit by bit.&lt;/li&gt;
                &lt;li&gt;Keep a record of all the users who take the quiz and show each user how her score ranks amongst the scores from other quiz takers.&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/label&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;3. Later (after you have learned Backbone.js and Node.js), you will use these two technologies to refactor your quiz code and turn the same quiz into a sophisticated, single-page, modern web application built with the latest JavaScript frameworks. And you will store the users’ authentication credentials and scores in a MongoDB database.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;4. Next: Decide on a personal project to build, and start building your project promptly (while everything is fresh in your mind).
        &lt;/label&gt;
&lt;/div&gt;

&lt;!-- Advanced javascript --&gt;
&lt;h4 class=&quot;accordion-toggle&quot;&gt;Weeks 9 &amp; 10&lt;!--&amp;#9660--&gt;&lt;/h4&gt;
&lt;div class=&quot;accordion-content&quot;&gt;
    &lt;p&gt;Essential JavaScript Techniques &amp; Complete JavaScript Jedi Training&lt;/p&gt;
    &lt;form data-persist=&quot;garlic&quot;&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;1. Read the entire Effective JavaScript book. This is my favorite JavaScript book. Every page is packed with incredible tips and insightful techniques. I kept whispering, “A Ha,” on many pages.
            &lt;br&gt;It provides you with 68 excellent JavaScript techniques and concepts that you need to know as a JavaScript developer.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;2. While reading the book, practice the concepts in WebStorm or your browser’s console to reinforce and completely understand the topics through hands-on practice. Simply trying to memorize everything you have learned without practicing is a great way to ensure you will forget them and never completely understand them.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;3. Since we are trained JavaScript apprentices, we needn’t develop an application while learning the advanced JavaScript techniques. We only have to know and understand all the advanced techniques, so we can whip them out and use them or look them up and use them, when the need arises. 
            &lt;br&gt;Read the entire JavaScript Patterns book.
        &lt;/label&gt;
        &lt;br&gt;
        &lt;label class=&quot;accordion-label&quot;&gt;
            &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;4. Optional: Since there are a few hours to spare this week, you should have enough time to watch Douglas Crockford’s Advanced JavaScript Videos. They are not too lengthy.
        &lt;/label&gt;
&lt;/div&gt;

&lt;/form&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;This is basically a repost from &lt;a target=&quot;_blank&quot; href=&quot;http://javascriptissexy.com/how-to-learn-javascript-properly/&quot;&gt;javascriptissexy.com&lt;/a&gt;,
    for my own tracking purposes. Due credits are at the bottom.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Sep 2015 00:00:00 -0500</pubDate>
        <link>//fullstack-js-guide/</link>
        <guid isPermaLink="true">//fullstack-js-guide/</guid>
      </item>
    
      <item>
        <title>3D Art Dump</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://chriswahlfeldt.com/wp-content/uploads/photo-gallery/pipeStill.png&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;http://chriswahlfeldt.com/wp-content/uploads/photo-gallery/guitar.jpg&quot; alt=&quot;&quot;&gt;
&lt;img src=&quot;http://chriswahlfeldt.com/wp-content/uploads/photo-gallery/phonebooth.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;565&quot; src=&quot;https://www.youtube.com/embed/T0mmK15vwy8&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;565&quot; src=&quot;https://www.youtube.com/embed/BZdwyKPf59c&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;565&quot; src=&quot;https://www.youtube.com/embed/ywh7A6FvuNU&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;565&quot; src=&quot;https://www.youtube.com/embed/7ue4U46brsc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sun, 06 Sep 2015 00:00:00 -0500</pubDate>
        <link>//3d-art-dump/</link>
        <guid isPermaLink="true">//3d-art-dump/</guid>
      </item>
    
      <item>
        <title>three.js Test</title>
        <description>&lt;iframe src=&quot;../../../../../threejs_test.html&quot; frameborder=&quot;0&quot; width=&quot;100%&quot; height=&quot;500px&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Fri, 04 Sep 2015 00:00:00 -0500</pubDate>
        <link>//2015/09/04/threes-js-test/</link>
        <guid isPermaLink="true">//2015/09/04/threes-js-test/</guid>
      </item>
    
      <item>
        <title>Going Full Stack!</title>
        <description>&lt;p&gt;With this article I set out to create a full stack javascript enviroment using tools and frameworks that are independant of eachother. My goal is to have a complete
React/React Native frontend, powered by websockets and an interchangable nodejs backend. Sounds fun right!&lt;/p&gt;

&lt;h3 id=&quot;frontend&quot;&gt;frontend:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Gulp&lt;/li&gt;
&lt;li&gt;Stylus&lt;/li&gt;
&lt;li&gt;bootstrap&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;backend&quot;&gt;backend:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;li&gt;nodejs, express or koa?&lt;/li&gt;
&lt;li&gt;socket.io&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With React, especially React Native, we can create full blown database driven IOS apps (and soon android) in Javascript. Thats one of the main goals of this project.
I alos would like to figure out if first using react, how hard it is to make the switch to native use.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Aug 2015 00:00:00 -0500</pubDate>
        <link>//a-new-stack/</link>
        <guid isPermaLink="true">//a-new-stack/</guid>
      </item>
    
      <item>
        <title>Galak-Z Rules!</title>
        <description>&lt;p&gt;Ive come across a simple strategy for surviving and profiting in
&lt;a href=&quot;http://17-bit.com/galakz&quot; target=&quot;_blank&quot;&gt;Galak-Z: The Dimensional&lt;/a&gt; 
Hold R2 and R1 while simoultaneosly charging and blocking with 
Square and X at the same time. Just rush every horde of enemies you see
and prevail! Easy as dat.&lt;/p&gt;

&lt;p&gt;Make sense?&lt;/p&gt;

&lt;p&gt;Check this out.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;400px&quot; src=&quot;https://www.youtube.com/embed/qqABuWfqnD4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Remember though throw your shield up while you charge your sword and repeat.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 00:00:00 -0500</pubDate>
        <link>//galak-z-rules</link>
        <guid isPermaLink="true">//galak-z-rules</guid>
      </item>
    
      <item>
        <title>Dismantle Tour</title>
        <description>&lt;p&gt;Tour flyer for We Must Dismantle All This &amp;amp; Street Feet.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 00:00:00 -0500</pubDate>
        <link>//art/2015/08/09/dismantle-tour/</link>
        <guid isPermaLink="true">//art/2015/08/09/dismantle-tour/</guid>
      </item>
    
      <item>
        <title>Welcome</title>
        <description>&lt;p&gt;Welcome! This is my new and improved site. I am slowly but surely getting my portfolio together and writing about things.
I am using jekyll as a base to produce my static website. So far so good. Im currently working on a few side projects so expect them to be here. 
I will also be posting dorky codeing posts and tutorials so that I can hopefully spread some knowledge into the internet!&lt;/p&gt;
</description>
        <pubDate>Sun, 31 May 2015 00:00:00 -0500</pubDate>
        <link>//general/2015/05/31/welcome/</link>
        <guid isPermaLink="true">//general/2015/05/31/welcome/</guid>
      </item>
    
  </channel>
</rss>
